/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import type { CreateFileRoute, FileRoutesByPath } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as PortalIndexRouteImport } from './routes/portal/index'

const PortalIndexRoute = PortalIndexRouteImport.update({
  id: '/portal/',
  path: '/portal/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/portal': typeof PortalIndexRoute
}
export interface FileRoutesByTo {
  '/portal': typeof PortalIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/portal/': typeof PortalIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/portal'
  fileRoutesByTo: FileRoutesByTo
  to: '/portal'
  id: '__root__' | '/portal/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  PortalIndexRoute: typeof PortalIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: unknown
      parentRoute: typeof rootRouteImport
    }
    '/routeTree/gen': {
      id: '/routeTree/gen'
      path: ''
      fullPath: '/routeTree/gen'
      preLoaderRoute: unknown
      parentRoute: typeof rootRouteImport
    }
    '/portal/': {
      id: '/portal/'
      path: '/portal'
      fullPath: '/portal'
      preLoaderRoute: typeof PortalIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

declare module './routes/_app' {
  const createFileRoute: CreateFileRoute<
    '/_app',
    FileRoutesByPath['/_app']['parentRoute'],
    FileRoutesByPath['/_app']['id'],
    FileRoutesByPath['/_app']['path'],
    FileRoutesByPath['/_app']['fullPath']
  >
}
declare module './routes/routeTree.gen' {
  const createFileRoute: CreateFileRoute<
    '/routeTree/gen',
    FileRoutesByPath['/routeTree/gen']['parentRoute'],
    FileRoutesByPath['/routeTree/gen']['id'],
    FileRoutesByPath['/routeTree/gen']['path'],
    FileRoutesByPath['/routeTree/gen']['fullPath']
  >
}
declare module './routes/portal/index' {
  const createFileRoute: CreateFileRoute<
    '/portal/',
    FileRoutesByPath['/portal/']['parentRoute'],
    FileRoutesByPath['/portal/']['id'],
    FileRoutesByPath['/portal/']['path'],
    FileRoutesByPath['/portal/']['fullPath']
  >
}

const rootRouteChildren: RootRouteChildren = {
  PortalIndexRoute: PortalIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
