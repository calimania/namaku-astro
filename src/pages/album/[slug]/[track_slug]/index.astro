---
import { type CollectionEntry, getCollection } from "astro:content";
import Layout from "../../../../layouts/Layout.astro";
import type { Album, Store, AlbumTrack } from "../../../../markket/index.d";
import { IconChevronsLeft } from "@tabler/icons-react";

export interface Props {
  album: Album;
  track: AlbumTrack;
  store: Store;
}

export async function getStaticPaths() {
  const albums = await getCollection("albums");
  const stores = await getCollection("store");
  const store = stores?.[0]?.data as Store;

  return albums.flatMap((album) => {
    return (
      album.data.tracks?.map((track) => ({
        params: {
          slug: album.data.slug,
          track_slug: track.slug,
        },
        props: {
          album: album.data,
          track: track,
          store,
        },
      })) || []
    );
  });
}

const { album, track, store } = Astro.props;
const otherTracks = album.tracks?.filter((t) => t.id !== track.id) || [];
---

<Layout
  store={store}
  page={{ Title: `${track.title} - ${album.title}` } as any}
>
  <div class="min-h-screen bg-gradient-to-b from-gray-900 to-gray-800">
    <!-- Hero Section -->
    <div class="relative pt-20 pb-16 px-4">
      <div class="max-w-6xl mx-auto">
        <!-- Navigation -->
        <div class="mb-8">
          <a
            href={`/album/${album.slug}`}
            class="text-gray-400 hover:text-white transition-colors inline-flex items-center gap-2"
          >
            <IconChevronsLeft size={16} />
            Back to {album.title}
          </a>
        </div>

        <div class="flex flex-col lg:flex-row gap-8 items-start">
          <!-- Main Image -->
          <div class="w-full lg:w-2/3">
            {
              track.media?.[0] && (
                <div class="rounded-xl overflow-hidden">
                  <img
                    src={track.media[0].url}
                    alt={track.title}
                    class="w-full h-auto"
                  />
                </div>
              )
            }
          </div>

          <!-- Track Info -->
          <div class="w-full lg:w-1/3 sticky top-8">
            <div class="bg-white/10 backdrop-blur-sm rounded-xl p-6">
              <h1 class="text-3xl font-bold text-white mb-4">
                {track.title}
              </h1>

              {
                track.description && (
                  <p class="text-gray-300 mb-6">{track.description}</p>
                )
              }

              {
                track.urls && track.urls.length > 0 && (
                  <div class="space-y-3">
                    <h3 class="text-white font-medium mb-2">Available on:</h3>
                    {track.urls.map((url) => (
                      <a
                        href={url.URL}
                        target="_blank"
                        rel="noopener noreferrer"
                        class="flex items-center justify-between w-full p-3 rounded-lg bg-white/5 hover:bg-white/10 text-white transition-colors"
                      >
                        <span>{url.Label}</span>
                        <svg
                          class="w-5 h-5"
                          fill="none"
                          stroke="currentColor"
                          viewBox="0 0 24 24"
                        >
                          <path
                            stroke-linecap="round"
                            stroke-linejoin="round"
                            stroke-width="2"
                            d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"
                          />
                        </svg>
                      </a>
                    ))}
                  </div>
                )
              }
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Other Tracks -->
    {
      otherTracks.length > 0 && (
        <div class="max-w-6xl mx-auto px-4 pb-20">
          <h2 class="text-2xl font-bold text-white mb-6">
            More from this album
          </h2>
          <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            {otherTracks.map((otherTrack) => (
              <a
                href={`/album/${album.slug}/${otherTrack.slug}`}
                class="group bg-white/10 backdrop-blur-sm rounded-xl overflow-hidden hover:bg-white/20 transition-colors"
              >
                {otherTrack.media?.[0] && (
                  <div class="aspect-[4/3] overflow-hidden">
                    <img
                      src={otherTrack.media[0].url}
                      alt={otherTrack.title}
                      class="w-full h-full object-cover transition-transform duration-500 group-hover:scale-105"
                    />
                  </div>
                )}
                <div class="p-4">
                  <h3 class="text-white font-medium mb-2">
                    {otherTrack.title}
                  </h3>
                  {otherTrack.description && (
                    <p class="text-gray-400 text-sm line-clamp-2">
                      {otherTrack.description}
                    </p>
                  )}
                </div>
              </a>
            ))}
          </div>
        </div>
      )
    }
  </div>
</Layout>
