---
import { type CollectionEntry, getCollection } from "astro:content";
import Layout from "../../../../layouts/Layout.astro";
import type { Album, Store, AlbumTrack } from "../../../../markket/index.d";
import { IconChevronsLeft } from "@tabler/icons-react";
import PageContent from "../../../../components/content.blocks";

export interface Props {
  album: Album;
  track: AlbumTrack;
  store: Store;
}

export async function getStaticPaths() {
  const albums = await getCollection("albums");
  const stores = await getCollection("store");
  const store = stores?.[0]?.data as Store;

  return albums.flatMap((album) => {
    return (
      album.data.tracks?.map((track) => ({
        params: {
          slug: album.data.slug,
          track_slug: track.slug,
        },
        props: {
          album: album.data,
          track: track,
          store,
        },
      })) || []
    );
  });
}

const { album, track, store } = Astro.props;
const otherTracks = album.tracks?.filter((t) => t.id !== track.id) || [];
---

<Layout
  store={store}
  SEO={{
    ...track.SEO,
    metaTitle: track.title || album.title,
    metaDescription: track.description || album.description,
    socialImage: {
      url: (track.media?.[0]?.url ||
        track?.SEO?.socialImage?.url ||
        (album.SEO?.socialImage?.url as string)) as string,
    },
  }}
>
  <div class="min-h-screen bg-gradient-to-b from-gray-900 to-gray-800">
    <!-- Navigation Bar -->
    <div class="fixed top-0 left-0 right-0 bg-black/20 backdrop-blur-lg z-50">
      <div class="max-w-6xl mx-auto px-4 py-4">
        <a
          href={`/album/${album.slug}`}
          class="text-gray-300 hover:text-white transition-colors inline-flex items-center gap-2 group"
        >
          <IconChevronsLeft size={16} />
          <span>Back to {album.title}</span>
        </a>
      </div>
    </div>

    <!-- Hero Section -->
    <div class="relative pt-20 min-h-screen flex items-center">
      <div class="absolute inset-0 z-0">
        {
          track.media?.[0] && (
            <img
              src={track.media[0].url}
              alt={track.title}
              class="w-full h-full object-cover opacity-20"
            />
          )
        }
        <div
          class="absolute inset-0 bg-gradient-to-b from-gray-900/50 to-gray-900/95"
        >
        </div>
      </div>

      <div class="relative z-10 max-w-6xl mx-auto px-4 py-16">
        <div class="flex flex-col lg:flex-row gap-12 items-start">
          <!-- Main Image -->
          <div class="w-full lg:w-2/3">
            {
              track.media?.[0] && (
                <div class="rounded-2xl overflow-hidden shadow-2xl ring-1 ring-white/10">
                  <img
                    src={track.media[0].url}
                    alt={track.title}
                    class="w-full h-auto"
                  />
                </div>
              )
            }
          </div>

          <!-- Track Info -->
          <div class="w-full lg:w-1/3 lg:sticky lg:top-24">
            <div
              class="bg-white/10 backdrop-blur-md rounded-2xl p-8 ring-1 ring-white/20"
            >
              <h1 class="text-3xl font-bold text-white mb-4 leading-tight">
                {track?.title}
              </h1>

              {
                track.description && (
                  <p class="text-gray-300 mb-8 leading-relaxed">
                    {track.description}
                  </p>
                )
              }

              {
                track.urls && track.urls.length > 0 && (
                  <div class="space-y-3">
                    <h3 class="text-white font-medium mb-4">Available on:</h3>
                    <div class="grid gap-3">
                      {track.urls.map((url) => (
                        <a
                          href={url.URL}
                          target="_blank"
                          rel="noopener noreferrer"
                          class="flex items-center justify-between w-full p-4 rounded-xl bg-gradient-to-r from-white/5 to-white/10 hover:from-white/10 hover:to-white/15 text-white transition-all duration-300 group"
                        >
                          <span class="font-medium">{url.Label}</span>
                          <svg
                            class="w-5 h-5 transform group-hover:translate-x-1 transition-transform"
                            fill="none"
                            stroke="currentColor"
                            viewBox="0 0 24 24"
                          >
                            <path
                              stroke-linecap="round"
                              stroke-linejoin="round"
                              stroke-width="2"
                              d="M14 5l7 7m0 0l-7 7m7-7H3"
                            />
                          </svg>
                        </a>
                      ))}
                    </div>
                  </div>
                )
              }
            </div>
          </div>
        </div>
        {
          track.content && (
            <div class="mt-12">
              <div class="text-white backdrop-blur-md rounded-2xl p-8 ring-1 ring-white/20">
                <PageContent params={{ track }} />
              </div>
            </div>
          )
        }
      </div>
    </div>

    <!-- Other Tracks -->
    {
      otherTracks.length > 0 && (
        <div class="relative z-10 bg-black/50 backdrop-blur-sm">
          <div class="max-w-6xl mx-auto px-4 py-20">
            <h2 class="text-2xl font-bold text-white mb-8">
              More from {album.title}
            </h2>
            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
              {otherTracks.map((otherTrack) => (
                <a
                  href={`/album/${album.slug}/${otherTrack.slug}`}
                  class="group bg-white/5 backdrop-blur-sm rounded-xl overflow-hidden hover:bg-white/10 transition-all duration-300 ring-1 ring-white/10 hover:ring-white/20"
                >
                  {otherTrack.media?.[0] && (
                    <div class="aspect-[4/3] overflow-hidden">
                      <img
                        src={otherTrack.media[0].url}
                        alt={otherTrack.title}
                        class="w-full h-full object-cover transition-all duration-500 group-hover:scale-105 group-hover:opacity-90"
                      />
                    </div>
                  )}
                  <div class="p-6">
                    <h3 class="text-white font-medium text-lg mb-2">
                      {otherTrack.title}
                    </h3>
                    {otherTrack.description && (
                      <p class="text-gray-400 text-sm line-clamp-2">
                        {otherTrack.description}
                      </p>
                    )}
                  </div>
                </a>
              ))}
            </div>
          </div>
        </div>
      )
    }
  </div>
</Layout>
