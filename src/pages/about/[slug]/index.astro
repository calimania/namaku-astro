---
import { type CollectionEntry, getCollection } from "astro:content";
import Layout from "../../../layouts/Layout.astro";
import type { Store, Page } from "../../../markket/index.d";
import Content from "../../../components/content.blocks";
import { IconChevronsLeft } from "@tabler/icons-react";
import AlbumsGrid from "../../../components/albums.grid";

export interface Props {
  page: Page;
  store: Store;
}

export async function getStaticPaths() {
  const pages = await getCollection("pages");
  const stores = await getCollection("store");
  const store = stores?.[0]?.data as any as Store;

  return pages
    .filter(page => page.data.slug !== "about" && page.data.slug !== "home")
    .map(page => ({
      params: {
        slug: page.data.slug
      },
      props: {
        page: page.data,
        store
      }
    }));
}

const { page, store } = Astro.props;
---

<Layout store={store} page={page} SEO={page?.SEO}>
  <div class="min-h-screen bg-gradient-to-b from-gray-50 to-white">
    <!-- Navigation -->
    <div class="max-w-4xl mx-auto pt-8 px-4">
      <a
        href="/about"
        class="text-gray-600 hover:text-blue-600 transition-colors inline-flex items-center gap-2"
      >
        <IconChevronsLeft size={16} />
        Back to About
      </a>
    </div>

    <!-- Hero Section -->
    <div class="relative pt-12 pb-16 px-4">
      <div class="max-w-4xl mx-auto">
        {page?.SEO?.socialImage?.url && (
          <div class="mb-8 rounded-2xl overflow-hidden shadow-xl">
            <img
              src={page.SEO.socialImage.url}
              alt={page.Title}
              class="w-full h-auto"
            />
          </div>
        )}

        <h1 class="text-4xl md:text-5xl font-bold text-gray-900 mb-6 bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent">
          {page.Title}
        </h1>

        {page?.SEO?.metaDescription && (
          <p class="text-xl text-gray-600 mb-8 leading-relaxed">
            {page.SEO.metaDescription}
          </p>
        )}

        {page?.Content && (
          <div class="prose prose-lg max-w-none prose-headings:text-gray-900 prose-a:text-blue-600 prose-a:no-underline hover:prose-a:underline">
            <Content params={{ page }} />
          </div>
        )}
      </div>
    </div>

    <!-- Related Content -->
    {page?.albums && page.albums.length > 0 && (
      <div class="bg-gray-50 py-16">
        <div class="max-w-6xl mx-auto px-4">
          <h2 class="text-2xl font-bold text-gray-900 mb-8 text-center">
            Related Albums
          </h2>
          <AlbumsGrid albums={page.albums} store={store} />
        </div>
      </div>
    )}
  </div>
</Layout>
